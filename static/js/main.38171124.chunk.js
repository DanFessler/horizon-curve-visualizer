(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,a){},16:function(e,t,a){e.exports=a.p+"static/media/logo.5d5d9eef.svg"},17:function(e,t,a){},19:function(e,t,a){"use strict";a.r(t);var n=a(0),i=a.n(n),o=a(2),r=a.n(o),l=(a(14),a(3)),s=a(4),u=a(6),c=a(5),h=a(7),d=(a(16),a(17),1024),m=768,g=function(e){function t(){var e,a;Object(l.a)(this,t);for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(a=Object(u.a)(this,(e=Object(c.a)(t)).call.apply(e,[this].concat(i)))).state={ctx:null,altitude:0,fov:60},a.renderCanvas=function(){var e=a.state.ctx;a.state.fov,Math.PI;e.clearRect(0,0,d,m),e.strokeStyle="rgba(0, 0, 0, 1)",e.beginPath(),e.arc(d/2,m/2+a.getPixelRadius(),a.getPixelRadius(),0,2*Math.PI),e.stroke(),e.strokeStyle="rgba(0, 0, 0, 0.125)",e.moveTo(0,m/2-.5),e.lineTo(d,m/2-.5),e.stroke()},a.handleAltitudeChange=function(e){a.setState({altitude:Math.max(e.target.value,0)})},a.handleFOVChange=function(e){a.setState({fov:Math.max(Math.min(e.target.value,180),1)})},a.getHorizonDistance=function(){var e=Math.max(a.getAltitude(),.001),t=a.getEarthRadius();return Math.sqrt(Math.pow(e,2)+2*t*e)},a.getHorizonLength=function(){var e=Math.min(a.state.fov,179.9)*(Math.PI/180);return a.getHorizonDistance()*Math.tan(e/2)*2},a.getEarthRadius=function(){return 3959},a.getAltitude=function(){return a.state.altitude},a.getPixelRadius=function(){var e=a.getEarthRadius(),t=a.getHorizonLength()/2,n=d/2*e/t;return console.log(n),n},a}return Object(h.a)(t,e),Object(s.a)(t,[{key:"componentDidMount",value:function(){this.setState({ctx:this.refs.canvas.getContext("2d")})}},{key:"componentDidUpdate",value:function(){this.renderCanvas()}},{key:"render",value:function(){return i.a.createElement("div",{className:"App"},i.a.createElement("h1",null,"Horizon Curvature Visualizer"),"Source code:"," ",i.a.createElement("a",{href:"https://github.com/DanFessler/horizon-curve-visualizer"},"https://github.com/DanFessler/horizon-curve-visualizer"),i.a.createElement("p",null,"This is a visualizer to give you a rough idea of how curved the horizon should appear at a given altitude with a known camera FOV.",i.a.createElement("br",null),"This is a work in progress and will continue to be improved. It makes some estimates and does not take into account fish eye lenses for the sake of simplicity."),i.a.createElement("br",null),i.a.createElement("p",null,i.a.createElement("label",null,"FOV:"),i.a.createElement("input",{name:"FOV",type:"number",value:this.state.fov,onChange:this.handleFOVChange}),i.a.createElement("i",null," degrees")),i.a.createElement("p",null,i.a.createElement("label",null,"Altitude:"),i.a.createElement("input",{name:"altitude",type:"number",value:this.state.altitude,onChange:this.handleAltitudeChange}),i.a.createElement("i",null," miles")),i.a.createElement("div",{style:{border:"1px solid gray",display:"inline-block"}},i.a.createElement("div",{style:{position:"absolute",padding:8}},"Horizon Distance: \xa0",this.getHorizonDistance(this.state.altitude).toFixed(2)," miles",i.a.createElement("br",null),"Horizon length: \xa0",this.getHorizonLength(this.state.altitude).toFixed(2)," miles",i.a.createElement("br",null)),i.a.createElement("canvas",{ref:"canvas",width:d,height:m})))}}]),t}(n.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(i.a.createElement(g,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,a){e.exports=a(19)}},[[8,2,1]]]);
//# sourceMappingURL=main.38171124.chunk.js.map